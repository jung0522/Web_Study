ci/cd 파이프라인 구축

1. GitHub 리포지토리 준비
GitHub 리포지토리에 프로젝트를 올리고, 해당 리포지토리에서 CI/CD를 설정합니다.

2. GitHub Actions 설정
GitHub Actions를 사용하여 CI/CD를 설정하기 위해 .github/workflows/ 디렉토리 아래에 워크플로우 파일(ci-cd.yml)을 작성합니다.

예시: ci-cd.yml
yaml
코드 복사
name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Build Docker image
        run: docker build -t jung0522/my-app .

      - name: Push Docker image to Docker Hub
        run: docker push jung0522/my-app:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Docker image from Docker Hub
        run: docker pull jung0522/my-app:latest

      - name: Run Docker container
        run: |
          docker stop my-app || true
          docker rm my-app || true
          docker run -d -p 80:8080 --name my-app jung0522/my-app:latest
build: 코드를 빌드하고, Docker 이미지를 생성한 후 Docker Hub에 푸시합니다.
deploy: EC2에서 Docker 이미지를 풀(Pull)한 후, 컨테이너를 실행합니다.
3. GitHub Secrets 설정
Docker Hub에 로그인하기 위해 GitHub Secrets에 Docker Hub의 사용자 이름과 비밀번호를 저장해야 합니다.

GitHub 리포지토리에서 Settings > Secrets and Variables > Actions로 이동합니다.
New repository secret을 클릭하고 DOCKER_USERNAME과 DOCKER_PASSWORD를 추가합니다.
4. EC2 서버 설정
CI/CD 파이프라인이 Docker 이미지를 EC2 서버에서 실행할 수 있도록 설정합니다.

Docker 설치: EC2 인스턴스에 Docker를 설치하고, Docker Hub에 로그인합니다.
보안 그룹 설정: EC2의 보안 그룹에서 80 포트를 열어야 외부에서 애플리케이션에 접근할 수 있습니다.
Docker 이미지 실행: EC2에서 Docker 이미지를 풀(Pull)한 후, 컨테이너를 실행합니다.
bash
코드 복사
docker pull jung0522/my-app:latest
docker run -d -p 80:8080 --name my-app jung0522/my-app:latest
5. CI/CD 파이프라인 실행
main 브랜치에 코드를 푸시하면, GitHub Actions가 자동으로 실행됩니다.
build 단계에서 Docker 이미지가 빌드되고, Docker Hub로 푸시됩니다.
deploy 단계에서 EC2 서버에 Docker 이미지가 다운로드되고, 컨테이너가 실행됩니다.
6. GitHub Actions 확인
Actions 탭에서 파이프라인의 실행 상태를 확인할 수 있습니다.
각 단계별로 로그를 확인하여 빌드 및 배포가 정상적으로 이루어졌는지 점검합니다.